continue
@deleted
@created
!@dirty
@dirty
res.provider
res.provider.flush
res.provider.class == Puppet::Type::Gauth_credential::ProviderServiceaccount
res.provider.class
res.provider.type
res.provider.title
res.provider.name
res.provider
continue
res.provider.instance_variable_get("@dirty")
res.provider.instance_variable_get("@deleted")
res.provider.instance_variable_get("@created")
res.provider.instance_variable_get("@dirty")
res.provider.instance_variable_get(:@dirty)
instance_variable_get(res.provider, :@dirty)
res.provider.dirty 
res.provider.dirty?
res.provider.dirty
res.provider.inspect
res.provider
res.exports
res.dirty?
res.dirty
res.name
continue
res.name
continue
res.name
continue
res.name
continue
res.name
continue
res.dirty?
res.dirty
res.title
res.name
continue
res.type
res.name
continue
res.name
continue
res.name
res.class
continue
res.class
res.type
res.title
res[0]
res
continue
require 'googleauth'
continue
detail
n
file
n
File.join(path, name)
path
n
step
$LOAD_PATH
step
name
n
step
n
step
name
next
name
step
name
continue
name
continue
name
continue
name
continue
name
continue
name
continue
n
file
n
name
continue
$LOAD_PATH
libdirs()
module_directories(env)
search_directories(env)
path
n
step
name
next
name
step
env
name
n
step
n
step
Puppet.lookup(:current_environment)
typeloader
n
@types[name]
n
@types
n
name.to_s
step
loaded
n
@last_result
typed_name
n
@compound_name
n
step
loader
n
step
type_name
step
continue
scope.class
scope.inspect
type_name
scope
n
step
n
method_name
@cache[thing.class]
n
step
n
step
arg
thing
step
n
continue
n
step
scope
target
n
step
n
step
n
code
n
resource_type
step
n
step
n
resource_type
n
builtin_type?
n
step
n
step
n
step
n
evaluated?
step
n
@main_resource
@topscope
n
@main
main
n
krt
n
step
n
step
block
n
block
step
n
continue
n
step
n
step
n
continue
n
step
n
step
n
step
description
show
list
help
bindings
n
args
n
key
step
n
node
n
trusted
n
step
n
node.trusted_data
node
n
trusted_param
n
step
node
step
continue
node
n
errors
n
errors
n
step
n
step
n
environment
next
step
n
step
n
step
n
step
